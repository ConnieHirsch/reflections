When would you want to use a remote repository rather than keeping all your work local?

-- First, backups are your friends, since a local repository is a single point of failure.  Secondly, a remote repository opens up possibilities such as being able to share files with others, as well as being able to work from a second computer yourself.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your repository?

-- Being able to determine when/what makes for more insightful commits and clean repositories that have workable code.

Describe the difference between forks, clones and branches.  When would you use one instead of another?

-- A branch is a variant within a depository.  A clone is a copy of a repository.  A fork is a cloned repository within Github, correctly attributing the originator of the base code, and pointing back to the original for research and comparison purposes.

-- Branches will often be merged back to the master (or else become the master) but clones may go on to become their own identity.  Forks seem to be intended to be independent.

What is the benefit of having a copy of the last known state of the remote stored locally?

-- First, the remote may not always be reachable (even in this day of cloud computing!) But since this may be used for collaborations, keeping up with the latest and greatest changes will avoid unnecessary conflicts if everyone is working with the latest code.
